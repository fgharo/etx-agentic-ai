---
# Source: demo-pipeline/templates/job-bad.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: trigger-java-app-build-bad
  namespace: demo-pipeline
spec:
  template:
    spec:
      serviceAccountName: pipeline
      initContainers:
      # Wait for the "good" job to complete successfully before proceeding
      - name: wait-for-good-job
        image: registry.redhat.io/openshift4/ose-cli:latest
        command:
          - /bin/sh
          - -c
          - |
            echo "Waiting for good job to complete successfully..."
            while true; do
              # Check if the good job exists and completed successfully
              JOB_STATUS=$(oc get job trigger-java-app-build-good -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}' --ignore-not-found)
              if [ "$JOB_STATUS" = "True" ]; then
                echo "Good job completed successfully. Proceeding with bad ref..."
                break
              fi
              
              # Check if the good job failed
              FAILED_STATUS=$(oc get job trigger-java-app-build-good -o jsonpath='{.status.conditions[?(@.type=="Failed")].status}' --ignore-not-found)
              if [ "$FAILED_STATUS" = "True" ]; then
                echo "Good job failed. Aborting bad job..."
                exit 1
              fi
              
              echo "Good job still running or not found. Waiting 10 seconds..."
              sleep 10
            done
      containers:
      - name: kubectl-runner
        image: registry.redhat.io/openshift4/ose-cli:latest
        command:
          - /bin/sh
          - -c
          - |
            # This 'here document' passes the PipelineRun YAML directly to oc.
            # It tells Tekton to start a new run of the 'java-app-build' pipeline with BAD ref.
            oc create -f - <<EOF
            apiVersion: tekton.dev/v1
            kind: PipelineRun
            metadata:
              # generateName creates a unique name for each run (e.g., java-app-build-run-bad-abc12).
              generateName: java-app-build-run-bad-
              namespace: demo-pipeline
            spec:
              taskRunTemplate:
                serviceAccountName: pipeline
              pipelineRef:
                # This must match the name of your existing Tekton Pipeline.
                name: java-app-build
              # Parameters for the pipeline - using "bad" git revision
              params:
                - name: IMAGE_NAME
                  value: "image-registry.openshift-image-registry.svc:5000/demo-pipeline/undertow-servlet"
                - name: GIT_REPO
                  value: "https://github.com/nstrug/openshift-quickstarts.git"
                - name: GIT_REVISION
                  value: "bad"
                - name: SUBDIRECTORY
                  value: "undertow-servlet"
              # Required workspace for the pipeline
              workspaces:
                - name: shared-workspace
                  volumeClaimTemplate:
                    spec:
                      accessModes:
                        - ReadWriteOnce
                      resources:
                        requests:
                          storage: 3Gi
            EOF
      restartPolicy: OnFailure
